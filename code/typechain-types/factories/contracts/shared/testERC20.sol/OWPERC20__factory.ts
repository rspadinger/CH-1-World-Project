/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  OWPERC20,
  OWPERC20Interface,
} from "../../../../contracts/shared/testERC20.sol/OWPERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000add38038062000add83398101604081905262000034916200012b565b8181600362000044838262000226565b50600462000053828262000226565b50503360805250620002f2915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008b57600080fd5b81516001600160401b0380821115620000a857620000a862000063565b604051601f8301601f19908116603f01168101908282118183101715620000d357620000d362000063565b8160405283815260209250866020858801011115620000f157600080fd5b600091505b83821015620001155785820183015181830184015290820190620000f6565b6000602085830101528094505050505092915050565b600080604083850312156200013f57600080fd5b82516001600160401b03808211156200015757600080fd5b620001658683870162000079565b935060208501519150808211156200017c57600080fd5b506200018b8582860162000079565b9150509250929050565b600181811c90821680620001aa57607f821691505b602082108103620001cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000221576000816000526020600020601f850160051c81016020861015620001fc5750805b601f850160051c820191505b818110156200021d5782815560010162000208565b5050505b505050565b81516001600160401b0381111562000242576200024262000063565b6200025a8162000253845462000195565b84620001d1565b602080601f831160018114620002925760008415620002795750858301515b600019600386901b1c1916600185901b1785556200021d565b600085815260208120601f198616915b82811015620002c357888601518255948401946001909101908401620002a2565b5085821015620002e25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516107cf6200030e600039600061016601526107cf6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806340c10f191161007157806340c10f191461012357806370a08231146101385780638da5cb5b1461016157806395d89b41146101a0578063a9059cbb146101a8578063dd62ed3e146101bb57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101f4565b6040516100c39190610618565b60405180910390f35b6100df6100da366004610683565b610286565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046106ad565b6102a0565b604051601281526020016100c3565b610136610131366004610683565b6102c4565b005b6100f36101463660046106e9565b6001600160a01b031660009081526020819052604090205490565b6101887f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c3565b6100b66102d2565b6100df6101b6366004610683565b6102e1565b6100f36101c936600461070b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102039061073e565b80601f016020809104026020016040519081016040528092919081815260200182805461022f9061073e565b801561027c5780601f106102515761010080835404028352916020019161027c565b820191906000526020600020905b81548152906001019060200180831161025f57829003601f168201915b5050505050905090565b6000336102948185856102ef565b60019150505b92915050565b6000336102ae858285610301565b6102b9858585610384565b506001949350505050565b6102ce82826103e3565b5050565b6060600480546102039061073e565b600033610294818585610384565b6102fc8383836001610419565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461037e578181101561036f57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61037e84848484036000610419565b50505050565b6001600160a01b0383166103ae57604051634b637e8f60e11b815260006004820152602401610366565b6001600160a01b0382166103d85760405163ec442f0560e01b815260006004820152602401610366565b6102fc8383836104ee565b6001600160a01b03821661040d5760405163ec442f0560e01b815260006004820152602401610366565b6102ce600083836104ee565b6001600160a01b0384166104435760405163e602df0560e01b815260006004820152602401610366565b6001600160a01b03831661046d57604051634a1406b160e11b815260006004820152602401610366565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561037e57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104e091815260200190565b60405180910390a350505050565b6001600160a01b03831661051957806002600082825461050e9190610778565b9091555061058b9050565b6001600160a01b0383166000908152602081905260409020548181101561056c5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610366565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105a7576002805482900390556105c6565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161060b91815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b818110156106465785810183015185820160400152820161062a565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461067e57600080fd5b919050565b6000806040838503121561069657600080fd5b61069f83610667565b946020939093013593505050565b6000806000606084860312156106c257600080fd5b6106cb84610667565b92506106d960208501610667565b9150604084013590509250925092565b6000602082840312156106fb57600080fd5b61070482610667565b9392505050565b6000806040838503121561071e57600080fd5b61072783610667565b915061073560208401610667565b90509250929050565b600181811c9082168061075257607f821691505b60208210810361077257634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561029a57634e487b7160e01b600052601160045260246000fdfea2646970667358221220ea5ddb14cbe434174269b93349affffdb0ff9fd92e5f16c14fcd5ab9321e927164736f6c63430008160033";

type OWPERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OWPERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OWPERC20__factory extends ContractFactory {
  constructor(...args: OWPERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OWPERC20> {
    return super.deploy(name, symbol, overrides || {}) as Promise<OWPERC20>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): OWPERC20 {
    return super.attach(address) as OWPERC20;
  }
  override connect(signer: Signer): OWPERC20__factory {
    return super.connect(signer) as OWPERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OWPERC20Interface {
    return new utils.Interface(_abi) as OWPERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OWPERC20 {
    return new Contract(address, _abi, signerOrProvider) as OWPERC20;
  }
}
