/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NativeMetaTransaction,
  NativeMetaTransactionInterface,
} from "../../../contracts/meta-transaction/NativeMetaTransaction";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "metaTXHash",
        type: "bytes32",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeperator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "functionSignature",
            type: "bytes",
          },
        ],
        internalType: "struct NativeMetaTransaction.MetaTransaction",
        name: "metaTx",
        type: "tuple",
      },
    ],
    name: "hashMetaTransaction",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600381526020016204f57560ec1b815250604051806040016040528060018152602001603160f81b815250610057828261005e60201b60201c565b50506100f0565b6040518060800160405280604f815260200161091e604f913980519060200120828051906020012082805190602001203061009d6100ec60201b60201c565b60408051602081019690965285019390935260608401919091526001600160a01b0316608083015260a082015260c00160408051601f1981840301815291905280516020909101206000555050565b4690565b61081f806100ff6000396000f3fe60806040526004361061004a5760003560e01c80630c53c51c1461004f578063138219b01461007857806320379ee5146100a65780632d0335ab146100bb5780633408e470146100f1575b600080fd5b61006261005d366004610550565b610104565b60405161006f919061061c565b60405180910390f35b34801561008457600080fd5b50610098610093366004610636565b6102fb565b60405190815260200161006f565b3480156100b257600080fd5b50600054610098565b3480156100c757600080fd5b506100986100d63660046106d4565b6001600160a01b031660009081526001602052604090205490565b3480156100fd57600080fd5b5046610098565b60408051606081810183526001600160a01b038816600081815260016020908152908590205484528301529181018690526101428782878787610378565b61019d5760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b60648201526084015b60405180910390fd5b6001600160a01b0387166000908152600160208190526040909120546101c2916106ef565b6001600160a01b0388166000908152600160205260409020557f3e00d0303d8647e6b87b82b57160c51f2355f8bfafb03453215192fa91f96125873388610208856102fb565b6040516102189493929190610716565b60405180910390a1600080306001600160a01b031634898b604051602001610241929190610753565b60408051601f198184030181529082905261025b9161078a565b60006040518083038185875af1925050503d8060008114610298576040519150601f19603f3d011682016040523d82523d6000602084013e61029d565b606091505b5091509150816102ef5760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c000000006044820152606401610194565b98975050505050505050565b60006040518060800160405280604381526020016107a7604391398051602091820120835184830151604080870151805190860120905161035b950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b60006001600160a01b0386166103de5760405162461bcd60e51b815260206004820152602560248201527f4e61746976654d6574615472616e73616374696f6e3a20494e56414c49445f5360448201526424a3a722a960d91b6064820152608401610194565b60016103f16103ec876102fb565b610468565b6040805160008152602081018083529290925260ff851690820152606081018690526080810185905260a0016020604051602081039080840390855afa15801561043f573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b6000805460405161190160f01b602082015260228101919091526042810183905260620161035b565b80356001600160a01b03811681146104a857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104d457600080fd5b813567ffffffffffffffff808211156104ef576104ef6104ad565b604051601f8301601f19908116603f01168101908282118183101715610517576105176104ad565b8160405283815286602085880101111561053057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561056857600080fd5b61057186610491565b9450602086013567ffffffffffffffff81111561058d57600080fd5b610599888289016104c3565b9450506040860135925060608601359150608086013560ff811681146105be57600080fd5b809150509295509295909350565b60005b838110156105e75781810151838201526020016105cf565b50506000910152565b600081518084526106088160208601602086016105cc565b601f01601f19169290920160200192915050565b60208152600061062f60208301846105f0565b9392505050565b60006020828403121561064857600080fd5b813567ffffffffffffffff8082111561066057600080fd5b908301906060828603121561067457600080fd5b60405160608101818110838211171561068f5761068f6104ad565b604052823581526106a260208401610491565b60208201526040830135828111156106b957600080fd5b6106c5878286016104c3565b60408301525095945050505050565b6000602082840312156106e657600080fd5b61062f82610491565b8082018082111561071057634e487b7160e01b600052601160045260246000fd5b92915050565b6001600160a01b03858116825284166020820152608060408201819052600090610742908301856105f0565b905082606083015295945050505050565b600083516107658184602088016105cc565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b6000825161079c8184602087016105cc565b919091019291505056fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a26469706673582212203acaa5ddca1fb2954d04f4621640b9aa052aa52c8164215699dd56d3058fe30264736f6c63430008160033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c7429";

type NativeMetaTransactionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NativeMetaTransactionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NativeMetaTransaction__factory extends ContractFactory {
  constructor(...args: NativeMetaTransactionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NativeMetaTransaction> {
    return super.deploy(overrides || {}) as Promise<NativeMetaTransaction>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NativeMetaTransaction {
    return super.attach(address) as NativeMetaTransaction;
  }
  override connect(signer: Signer): NativeMetaTransaction__factory {
    return super.connect(signer) as NativeMetaTransaction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NativeMetaTransactionInterface {
    return new utils.Interface(_abi) as NativeMetaTransactionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NativeMetaTransaction {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NativeMetaTransaction;
  }
}
